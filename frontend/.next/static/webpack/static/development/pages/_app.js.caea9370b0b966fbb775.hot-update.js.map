{"version":3,"file":"static/webpack/static/development/pages/_app.js.caea9370b0b966fbb775.hot-update.js","sources":["webpack:///./components/RemoveFromCart.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nclass RemoveFromCart extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  }\n\n  //This gets called as soon as we get a response back from the server after a mutation has been performed\n  update = (cache, payload) => {\n    //read the cache\n    //remove that item from the cart\n    //write it back to the cache\n  }\n\n  render() {\n    return (\n      <Mutation mutation={REMOVE_FROM_CART_MUTATION} variables={{ id: this.props.id }} update={this.update}>\n        {(removeFromCart, { loading, error }) => (\n          <BigButton\n            disabled={loading}\n            onClick={() => {\n              removeFromCart().catch(err => alert(err.message));\n            }}\n            title=\"Delete Item\"\n          >\n            &times;\n          </BigButton>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default RemoveFromCart;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;AAMA;AAEA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AA5BA;AACA;AADA;AAEA;AACA;AAFA;AACA;AA6BA;;;;A","sourceRoot":""}