{"version":3,"file":"static/webpack/static/development/pages/_app.js.fbaace145dc043b45526.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config';\nimport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n        cookies\n      });\n    },\n    //local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cartOpen value form the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n            // Write the cart State to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n            cache.writeData(data);\n            return data;\n          },\n        },\n      },\n      defaults: {\n        cartOpen: false,\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAZA;AADA;AAgBA;AACA;AADA;AAjBA;AAZA;AAkCA;AACA;AACA;;;;A","sourceRoot":""}