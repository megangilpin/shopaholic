{"version":3,"file":"static/webpack/static/development/pages/item.js.9589f296997d6dc8017a.hot-update.js","sources":["webpack:///./components/AddToCart.js","webpack:///./components/DeleteItem.js","webpack:///./components/Item.js","webpack:///./components/Items.js","webpack:///./components/Pagination.js","webpack:///./components/SingleItem.js","webpack:///./components/styles/ItemStyles.js","webpack:///./components/styles/PaginationStyles.js"],"sourcesContent":["import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User'\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nclass AddToCart extends React.Component {\n  render () {\n    const { id } = this.props;\n    return (\n      <Mutation \n        mutation={ADD_TO_CART_MUTATION}\n        variables={{\n          id,\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(addToCart, { loading }) => <button disabled={loading} onClick={addToCart}>Add{loading && 'ing'} To Cart üõí</button>}\n      </Mutation>\n    )\n  }\n}\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION }","import React, { Component } from 'react';\nimport{ Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items'\n\nconst DELETE_ITEM_MUTATION = gql `\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on teh client, so it matches the server\n    // 1. Read teh cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n    console.log(data)\n    // 2. filter teh deleted item out of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id)\n    // 3. put the items back!\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data});\n  }\n  \n  render() {\n    return (\n      <Mutation \n        mutation={DELETE_ITEM_MUTATION} \n        variables={{id: this.props.id }}\n        update={this.update}\n      > \n       {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                deleteItem().catch(err => {\n                  alert(err.message);\n                });\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport ItemStyles from './styles/ItemStyles';\nimport formatMoney from '../lib/formatMoney';\nimport DeleteItem from './DeleteItem';\nimport AddToCart from './AddToCart';\n\n\nclass Item extends Component {\n  \n  render() {\n    const { item } = this.props;\n    return (\n      <ItemStyles>\n        <div className=\"card\">\n          {item.image && <img src={item.image} alt={item.title} />}\n          <Link\n            href={{\n              pathname: '/item',\n              query: { id: item.id },\n            }}\n            >\n            <a className=\"card_title\">{item.title}</a>\n          </Link>\n          <p className=\"card_money\">{formatMoney(item.price)}</p>\n          {/* <p className=\"card_description\">{item.description}</p> */}\n          \n          <div className=\"buttonList\">\n          \n            <Link\n              href={{\n                pathname: 'update',\n                query: { id: item.id },\n              }}\n            >\n              <a>Edit ‚úèÔ∏è</a>\n            </Link>\n            <AddToCart id={item.id} />\n            <DeleteItem id={item.id}>Delete Item</DeleteItem>\n          </div>\n        </div>\n      </ItemStyles>\n    );\n  }\n}\n\nItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item'; \nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nconst ALL_ITEMS_QUERY = gql `\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items (first: $first, skip: $skip, orderBy: createdAt_DESC){\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxwidth};\n  margin: 0 auto;\n`;\n\n \nclass Items extends Component {\n  render() {\n    return (\n      <Center>\n        <Pagination page={this.props.page}/>\n        <Query query={ALL_ITEMS_QUERY} \n        variables={{ \n          skip: this.props.page * perPage - perPage, \n        }}>\n           {({ data, error, loading }) => {\n            if(loading) return <p>...Loading</p>\n           if(error) return <p>Error: {error.message}</p>\n            return <ItemsList>\n              {data.items.map(item => <Item item={item} key={item.id} />)}\n            </ItemsList>\n          }}\n        </Query>\n        <Pagination page={this.props.page}/>\n      </Center>\n    );\n  }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY }","import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head'; \nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nconst PAGINATION_QUERY = gql `\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => (\n  <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>LOADING ...</p>;\n        const count = data.itemsConnection.aggregate.count;\n        const pages = Math.ceil( count / perPage);\n        const page = props.page;\n      return (\n        <PaginationStyles data-test=\"pagination\">\n          <Head>\n            <title>\n              SHOPAHOLIC - PAGE {page} OF {pages}\n            </title>\n          </Head>\n          <Link \n            prefetch\n            href={{\n              pathname: 'items',\n              query: { page: page - 1 }\n            }}>\n            <a className=\"prev\" aria-disabled={page <= 1}>PREV</a>\n          </Link>\n          <p>\n            PAGE {page} OF <span className=\"totalPages\"> {pages}</span>\n          </p>\n          <p>{count} ITEMS TOTAL</p>\n          <Link \n            prefetch\n            href={{\n              pathname: 'items',\n              query: { page: page + 1 }\n            }}>\n            <a className=\"next\" aria-disabled={page >= pages}>NEXT</a>\n          </Link>\n        </PaginationStyles>)}}\n    </Query>\n)\n\nexport default Pagination;\nexport { PAGINATION_QUERY };","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport styled from 'styled-components';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport Link from 'next/link';\nimport DeleteItem from './DeleteItem';\nimport AddToCart from './AddToCart';\n\nconst SingleItemStyles = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    // width: auto;\n    // height: 85vh;\n    // margin: 0 auto;\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 4rem 4rem;\n    line-height: 1;\n    color: ${props => props.theme.darkGrey};\n  }\n  .item_title {\n    text-transform: uppercase;\n    letter-spacing: .4rem;\n    font-weight: 400;\n    font-size: 4rem;\n    margin-bottom: 1.5rem;\n  }\n  .description_title {\n    text-transform: uppercase;\n    letter-spacing: .4rem;\n    font-weight: 600;\n    font-size: 2rem;\n    color: ${props => props.theme.darkGrey};\n    margin-top: 4rem;\n    margin-bottom: 1.5rem;\n  }\n  .description {\n    font-weight: 400;\n    font-size: 1.5rem;\n    color: ${props => props.theme.darkPurple};\n    margin: 0;\n  }\n  hr {\n    border: 0;\n    height: 0;\n    border-top: 1px solid ${props => props.theme.lightPurple};\n  }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      price\n      description\n      largeImage\n    }\n  }\n`;\nclass SingleItem extends Component {\n  render() {\n    return (\n      <Query\n        query={SINGLE_ITEM_QUERY}\n        variables={{\n          id: this.props.id,\n        }}\n      >\n        {({ error, loading, data }) => {\n          if (error) return <Error error={error} />;\n          if (loading) return <p>Loading...</p>;\n          if (!data.item) return <p>No Item Found for {this.props.id}</p>;\n          const item = data.item;\n          return (\n            <SingleItemStyles>\n              <Head>\n                <title>Sick Fits | {item.title}</title>\n              </Head>\n              <img src={item.largeImage} alt={item.title} />\n              <div className=\"details\">\n                <h2 className=\"item_title\">{item.title}</h2>\n                <hr></hr>\n                <h2>{formatMoney(item.price)}</h2>\n                <p className=\"description_title\">Details:</p>\n                <p className=\"description\">{item.description}</p>\n              </div>\n            </SingleItemStyles>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default SingleItem;\nexport { SINGLE_ITEM_QUERY };\n","import styled from 'styled-components';\n\nconst Item = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  .card {\n    border-radius: 10px;\n    transition: all .15s;\n    overflow: hidden;\n    line-height: 1.5;\n    img {\n      width: 100%;\n      height: 400px;\n      object-fit: cover;\n      transition: all .15s;\n    }\n    .card_title {\n      color: ${props => props.theme.lightgrey};\n      flex-grow: 1;\n      text-align: left important!;\n      padding: 0;\n      font-size: 2.8rem;\n      font-weight: 400;\n      letter-spacing: .5rem;\n      text-shadow: -1px -1px 1px rgba(255,255,255), 1px 1px 2px #b3b3b3;\n      border: 0;\n      padding: 5px;\n      cursor: pointer;\n      transition: all .15s;\n    }\n    p {\n      line-height: 1;\n      color: ${props => props.theme.lightPurple};\n      font-size: 1.8rem;\n      font-weight: 500;\n      margin: 0;\n      text-align: left;\n      padding: 5px;\n      transition: all .15s;\n    }\n    // p.card_description {\n    //   display: none;\n    // }\n    .buttonList {\n      display: grid;\n      width: 100%;\n      border-top: 1px solid ${props => props.theme.lightgrey};\n      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n      grid-gap: 1px;\n      background: ${props => props.theme.lightgrey};\n      text-align: center;\n      margin-top: 5px;\n      visibility: hidden;\n      & > * {\n        background: ${props => props.theme.offWhite};\n        border: 0;\n        color: ${props => props.theme.darkGrey};\n        font-size: 1.2rem;\n        font-weight: 700;\n        padding: 1.5rem;\n        line-height: 1.5;\n      }\n    }\n    &:hover {\n      box-shadow: ${props => props.theme.boxshadow};\n      // background: ${props => props.theme.greyWhite};\n      // -webkit-transform: scale(1.03);\n      // -ms-transform: scale(1.03);\n      // transform: scale(1.03);\n      img {\n        -webkit-transform: scale(.9);\n        -ms-transform: scale(.9);\n        transform: scale(.9);\n      }\n      .card_title {\n        color:  ${props => props.theme.darkGrey};\n        text-shadow: -1px -1px 1px transparent, 1px 1px 2px transparent;\n        font-size: 3rem;\n        letter-spacing: .3rem;\n        margin-left: 1rem;\n        &:hover {\n          color:  ${props => props.theme.lightgrey};\n          font-weight: 400;\n          text-shadow: -1px -1px 1px rgba(255,255,255), 1px 1px 2px #b3b3b3;\n        }\n        &:active {\n          text-shadow: none;\n          border: none;\n          color:  ${props => props.theme.grey};\n          font-weight: 400;\n        }\n      }\n      p {\n        margin-left: 1rem;\n        color:  ${props => props.theme.darkGrey};\n      }\n      p.card_money {\n        font-weight: bold;\n      }\n      // p.card_description {\n      //   display: inherit;\n      //   font-size: 1.5rem;\n      //   font-weight: 500;\n      // }\n      .buttonList {\n        visibility: visible;\n        & > * {\n          &:hover {\n            color:  ${props => props.theme.medPurple};\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n  // hr {\n  //   width: 100%;\n  //   height: 2px;\n  //   border: 0;\n  //   margin-top: 1.5rem;\n  //   background-color: ${props => props.theme.offWhite};\n  //   box-shadow: ${props => props.theme.lgemboss};\n  // }\n`;\n\nexport default Item;","import styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  margin: 7rem 0;\n  border: 1px solid ${props => props.theme.lightgrey};\n  border-radius: 10px;\n  // color:  ${props => props.theme.medGrey};\n  p {\n    font-weight: 500;\n    letter-spacing: .1rem;\n    color:  ${props => props.theme.medGrey};\n  }\n  & > * {\n    margin: 0;\n    padding: 15px 30px;\n    border-right: 1px solid ${props => props.theme.lightgrey};\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  a[aria-disabled='true'] {\n    color:  ${props => props.theme.lightPurple};\n    pointer-events: none;\n  }\n  a[aria-disabled='false'] {\n    color:  ${props => props.theme.darkGrey};\n    pointer-events: none;\n  }\n`;\n\nexport default PaginationStyles;\n"],"mappings":"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","sourceRoot":""}